automation:

  - alias: 'tts Earth Quake Alert'
    trigger:
      platform: geo_location
      source: usgs_earthquakes_feed
      zone: zone.earth_quake_alert_zone
      event: enter
    condition:
      condition: template
      value_template: "{{ trigger.to_state.attributes.type == 'earthquake' }}"
    action:
      - service: persistent_notification.create
        data_template:
          message: "{{ trigger.to_state.name }} - {{ trigger.to_state.attributes.status }}"
          title: "Earth Quake Alert"
      - service: media_player.volume_set
        data:
          entity_id: media_player.main_display
          volume_level: 1.0
      - delay: 00:00:02
      - service: tts.google_say
        data_template:
          entity_id: 
            - media_player.main_display
            - media_player.bathroom_speaker
            - media_player.bedroom_speaker
          message: "This is a {{ trigger.to_state.attributes.alert }} alert. An Earthquake with a magnitude of {{ trigger.to_state.attributes.magnitude }} has been detected {{ trigger.to_state.attributes.place }}"

  - alias: tts Welcome Home everyone
    trigger:
      - platform: state
        entity_id: binary_sensor.main_pir
        to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.home_everyone
          state: 'on'
    action:
      - data:
          entity_id: media_player.main_display
          volume_level: 0.6
        service: media_player.volume_set
      - delay: 00:00:02
      - service: tts.google_say
        data_template:
          entity_id: media_player.main_display
          message: "Welcome home!"
      - wait_template: "{{ is_state('media_player.main_display','playing')}}"
        timeout: '00:02:00'
      - wait_template: "{{ is_state('media_player.main_display','idle')}}"
        timeout: '00:02:00'
      - service: media_player.turn_off
        entity_id: media_player.main_display
      - service: input_boolean.turn_off
        entity_id: input_boolean.home_everyone

  - alias: tts Good Morning
    description: 'When good morning is switched on, run good morning routine'
    trigger:
      - platform: state
        entity_id: input_boolean.good_morning
        to: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.announcements
      - service: remote.turn_on
        entity_id: remote.main
        data:
          activity: "SHIELD TV"
      - data:
          entity_id: media_player.main_display
          volume_level: 0.6
        service: media_player.volume_set
      - delay: 0:00:02
      - data:
          entity_id: media_player.main_display
          message: "The weather summary for the day is as follows"
        service: tts.google_say
      - wait_template: "{{ is_state('media_player.main_display', 'playing')}}"
      - wait_template: "{{ is_state('media_player.main_display', 'idle')}}"
      - delay: 0:00:01
      - data_template:
          entity_id: media_player.main_display
          message: "{{ states('sensor.dark_sky_hourly_summary') }}"
        service: tts.google_say
      - wait_template: "{{ is_state('media_player.main_display', 'playing')}}"
      - wait_template: "{{ is_state('media_player.main_display', 'idle')}}"
      - delay: 0:00:01
      - delay: 00:00:05
      - data_template:
          entity_id: media_player.shield
          media_content_type: video
          media_content_id: "https://publish.dvlabs.com/democracynow/video-podcast/dn{{now()|as_timestamp()|timestamp_custom('%Y-%m%d', false)}}.mp4"
        service: media_player.play_media
      # - wait_template: "{{ is_state('media_player.main_display','playing')}}"
      #   timeout: '00:02:00'
      - wait_template: "{{ is_state('media_player.main_display','idle')}}"
        timeout: '00:02:00'
      - service: media_player.turn_off
        entity_id: media_player.main_display
